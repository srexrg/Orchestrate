generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(uuid())
  email         String      @unique
  password      String
  name          String
  phone         String?
  roles         UserRole[]  
  contactInfo   String?     @map("contact_info")

  refreshToken  String?     @map("refresh_token")


  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")

  
  organizedEvents Event[]   @relation("EventOrganizer")
  tickets         Ticket[] 
  eventAttendees  EventAttendee[]
}

enum UserRole {
  ATTENDEE
  ORGANIZER
  ADMIN
}

model Venue {
  id       String  @id @default(uuid())
  name     String
  address  String
  capacity Int
  events   Event[]
}

model Event {
  id           String    @id @default(uuid())
  name         String
  description  String?
  date         DateTime  @db.Timestamptz
  venueId      String?   @map("venue_id")
  organizerId  String    @map("organizer_id")
  venue        Venue?    @relation(fields: [venueId], references: [id])
  organizer    User      @relation("EventOrganizer", fields: [organizerId], references: [id])
  attendees    EventAttendee[]
  tickets      Ticket[]
}

model EventAttendee {
  id         String    @id @default(uuid())
  eventId    String    @map("event_id")
  userId     String    @map("user_id")
  event      Event     @relation(fields: [eventId], references: [id])
  user       User      @relation(fields: [userId], references: [id])
}

model Ticket {
  id           String    @id @default(uuid())
  eventId      String    @map("event_id")
  userId       String    @map("user_id")
  ticketType   String    @map("ticket_type")
  price        Decimal   @db.Decimal(10, 2)
  purchaseDate DateTime  @default(now()) @map("purchase_date") @db.Timestamptz
  event        Event     @relation(fields: [eventId], references: [id])
  user         User      @relation(fields: [userId], references: [id])
}